## -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

def build(bld):
    obj = bld.create_ns3_program('tcp-large-transfer',
                                 ['point-to-point', 'internet-stack'])
    obj.source = 'tcp-large-transfer.cc'

    obj = bld.create_ns3_program('tcp-nsc-lfn',
                                 ['point-to-point', 'internet-stack'])
    obj.source = 'tcp-nsc-lfn.cc'

    obj = bld.create_ns3_program('tcp-nsc-zoo',
                                 ['csma', 'internet-stack'])
    obj.source = 'tcp-nsc-zoo.cc'

    obj = bld.create_ns3_program('tcp-star-server',
                                 ['point-to-point', 'internet-stack'])
    obj.source = 'tcp-star-server.cc'

    obj = bld.create_ns3_program('star',
                                 ['point-to-point', 'internet-stack'])
    obj.source = 'star.cc'

    obj = bld.create_ns3_program('sunum_wifi',
								['core', 'simulator', 'point-to-point', 'csma', 'wifi', 'internet-stack'])
    obj.source = 'sunum_wifi.cc'
	
    obj = bld.create_ns3_program('sunum_mesh',
								['core', 'simulator', 'point-to-point', 'csma', 'wifi', 'internet-stack'])
    obj.source = 'sunum_mesh.cc'
	
    obj = bld.create_ns3_program('sunum_csma',
								['core', 'simulator', 'point-to-point', 'csma', 'wifi', 'internet-stack'])
    obj.source = 'sunum_csma.cc'
    
    obj = bld.create_ns3_program('sunum_wifi_tek',
								['core', 'simulator', 'point-to-point', 'csma', 'wifi', 'internet-stack'])
    obj.source = 'sunum_wifi_tek.cc'
	
    obj = bld.create_ns3_program('sunum_chainMesh',
								['core', 'simulator', 'point-to-point', 'csma', 'wifi', 'internet-stack'])
    obj.source = 'sunum_chainMesh.cc'